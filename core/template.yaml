AWSTemplateFormatVersion: '2010-09-09'
Description: Core infrastructure that should not change often
Transform: AWS::Serverless-2016-10-31

Parameters:
  Environment:
    Description: The environment type
    Type: String
    AllowedValues:
      - dev
      - build
      - staging
      - integration
      - production

Resources:
  ChatbotAlarmRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'chatbot.amazonaws.com'
            Action:
              - 'sts:AssumeRole'

  ChatbotAlarmServiceLinkedRole:
    Type: AWS::IAM::ServiceLinkedRole
    Properties:
      AWSServiceName: management.chatbot.amazonaws.com

  LambdaKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable Root access
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:*
            Resource: '*'
          - Sid: Allow Lambda to decrypt environment variables
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - kms:Decrypt
            Resource: '*'

  LambdaKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/${Environment}/lambda-kms-key
      TargetKeyId: !Ref LambdaKmsKey

  LogsKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable Root access
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:*
            Resource: '*'
          - Sid: Allow CloudWatch Logs to use key
            Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Decrypt*
              - kms:Describe*
              - kms:Encrypt*
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource: '*'
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*

  LogsKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/${Environment}/logs-kms-key
      TargetKeyId: !Ref LogsKmsKey

  SecretsKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable Root access
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:*
            Resource: '*'
          - Sid: Allow AWS Lambda access
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - kms:Decrypt
            Resource: '*'

  SecretsKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/${Environment}/secrets-kms-key
      TargetKeyId: !Ref SecretsKmsKey

  SnsKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable Root access
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:*
            Resource: '*'
          - Sid: Allow access for Key User (SNS Service Principal)
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action:
              - kms:GenerateDataKey*
              - kms:Decrypt
            Resource: '*'
          - Sid: Allow access for CloudWatch
            Effect: Allow
            Principal:
              Service: cloudwatch.amazonaws.com
            Action:
              - kms:GenerateDataKey*
              - kms:Decrypt
            Resource: '*'

  SnsKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/${Environment}/sns-kms-key
      TargetKeyId: !Ref SnsKmsKey

  SqsKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable Root access
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:*
            Resource: '*'
          - Sid: Allow AWS Lambda access
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - kms:GenerateDataKey
              - kms:Encrypt
              - kms:Decrypt
            Resource: '*'

  SqsKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/${Environment}/queue-kms-key
      TargetKeyId: !Ref SqsKmsKey

  DatabaseKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable Root access
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:*
            Resource: '*'
          - Sid: Allow AWS Lambda access
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - kms:Decrypt
            Resource: '*'

  DatabaseKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/${Environment}/database-kms-key
      TargetKeyId: !Ref DatabaseKmsKey

  LambdaKmsKeyArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: LambdaKmsKeyArn
      Type: String
      Value: !GetAtt LambdaKmsKey.Arn

  LogsKmsKeyArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: LogsKmsKeyArn
      Type: String
      Value: !GetAtt LogsKmsKey.Arn

  SecretsKmsKeyArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: SecretsKmsKeyArn
      Type: String
      Value: !GetAtt SecretsKmsKey.Arn

  SqsKmsKeyArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: SqsKmsKeyArn
      Type: String
      Value: !GetAtt SqsKmsKey.Arn

  DatabaseKmsKeyArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: DatabaseKmsKeyArn
      Type: String
      Value: !GetAtt DatabaseKmsKey.Arn

  SnsKmsKeyArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: CoreSnsKmsKeyArn
      Type: String
      Value: !GetAtt SnsKmsKey.Arn

  ChatbotAlarmRoleArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: ChatbotAlarmRoleArn
      Type: String
      Value: !GetAtt ChatbotAlarmRole.Arn
